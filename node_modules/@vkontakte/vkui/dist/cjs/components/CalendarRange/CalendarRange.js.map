{"version":3,"sources":["../../../../src/components/CalendarRange/CalendarRange.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  addMonths,\n  endOfDay,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isWithinInterval,\n  startOfDay,\n  subMonths,\n} from 'date-fns';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { isFirstDay, isLastDay, navigateDate, setTimeEqual } from '../../lib/calendar';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  CalendarDays,\n  type CalendarDaysProps,\n  type CalendarDaysTestsProps,\n} from '../CalendarDays/CalendarDays';\nimport {\n  CalendarHeader,\n  type CalendarHeaderProps,\n  type CalendarHeaderTestsProps,\n} from '../CalendarHeader/CalendarHeader';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './CalendarRange.module.css';\n\nexport type DateRangeType = [Date | null, Date | null];\n\nexport type CalendarRangeTestsProps = CalendarDaysTestsProps & {\n  leftPartHeaderTestsData?: CalendarHeaderTestsProps;\n  rightPartHeaderTestsData?: CalendarHeaderTestsProps;\n};\n\nexport interface CalendarRangeProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>,\n    Pick<\n      CalendarHeaderProps,\n      | 'prevMonthLabel'\n      | 'nextMonthLabel'\n      | 'changeMonthLabel'\n      | 'changeYearLabel'\n      | 'prevMonthIcon'\n      | 'nextMonthIcon'\n    >,\n    Pick<CalendarDaysProps, 'listenDayChangesForUpdate' | 'renderDayContent'>,\n    CalendarRangeTestsProps {\n  value?: DateRangeType;\n  disablePast?: boolean;\n  disableFuture?: boolean;\n  disablePickers?: boolean;\n  changeDayLabel?: string;\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  onChange?: (value: DateRangeType | undefined) => void;\n  shouldDisableDate?: (value: Date) => boolean;\n  onClose?: () => void;\n}\n\nconst getIsDaySelected = (day: Date, value?: DateRangeType) => {\n  if (!value?.[0] || !value[1]) {\n    return false;\n  }\n\n  return isWithinInterval(day, { start: startOfDay(value[0]), end: endOfDay(value[1]) });\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CalendarRange\n */\nexport const CalendarRange = ({\n  value,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onClose,\n  weekStartsOn = 1,\n  disablePickers,\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  changeDayLabel = 'Изменить день',\n  prevMonthIcon,\n  nextMonthIcon,\n  listenDayChangesForUpdate,\n  renderDayContent,\n  dayTestId,\n  leftPartHeaderTestsData,\n  rightPartHeaderTestsData,\n  ...props\n}: CalendarRangeProps): React.ReactNode => {\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    isDayFocused,\n    isDayDisabled,\n    resetSelectedDay,\n    isMonthDisabled,\n    isYearDisabled,\n  } = useCalendar({ value, disableFuture, disablePast, shouldDisableDate });\n  const [hintedDate, setHintedDate] = React.useState<DateRangeType>();\n  const secondViewDate = addMonths(viewDate, 1);\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      if (['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(event.key)) {\n        event.preventDefault();\n      }\n\n      const newFocusedDay = navigateDate(focusedDay ?? value?.[1], event.key);\n\n      if (\n        newFocusedDay &&\n        !isSameMonth(newFocusedDay, viewDate) &&\n        !isSameMonth(newFocusedDay, addMonths(viewDate, 1))\n      ) {\n        setViewDate(newFocusedDay);\n      }\n      setFocusedDay(newFocusedDay);\n    },\n    [focusedDay, setFocusedDay, setViewDate, value, viewDate],\n  );\n\n  const getNewValue = React.useCallback(\n    (date: Date): DateRangeType => {\n      const isValueEmpty = !value || (value[0] === null && value[1] === null);\n      if (isValueEmpty) {\n        return [date, null];\n      }\n\n      const [start, end] = value;\n      if ((start && isSameDay(date, start)) || (end && isSameDay(date, end))) {\n        return [setTimeEqual(date, start), setTimeEqual(date, end)];\n      } else if (start && isBefore(date, start)) {\n        return [setTimeEqual(date, start), end];\n      } else if (start && isAfter(date, start)) {\n        return [start, setTimeEqual(date, end)];\n      }\n      return value;\n    },\n    [value],\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      onChange?.(getNewValue(date));\n      setHintedDate(undefined);\n    },\n    [onChange, getNewValue],\n  );\n\n  const isDaySelected = React.useCallback((day: Date) => getIsDaySelected(day, value), [value]);\n\n  const isDayActive = React.useCallback(\n    (day: Date) =>\n      Boolean((value?.[0] && isSameDay(day, value[0])) || (value?.[1] && isSameDay(day, value[1]))),\n    [value],\n  );\n\n  const isDaySelectionEnd = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isLastDay(day, dayOfWeek) || (value?.[1] && isSameDay(day, value[1]))),\n    [value],\n  );\n\n  const isHintedDaySelectionEnd = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isLastDay(day, dayOfWeek) || (hintedDate?.[1] && isSameDay(day, hintedDate[1]))),\n    [hintedDate],\n  );\n\n  const isDaySelectionStart = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isFirstDay(day, dayOfWeek) || (value?.[0] && isSameDay(day, value[0]))),\n    [value],\n  );\n\n  const isHintedDaySelectionStart = React.useCallback(\n    (day: Date, dayOfWeek: number) =>\n      Boolean(isFirstDay(day, dayOfWeek) || (hintedDate?.[0] && isSameDay(day, hintedDate[0]))),\n    [hintedDate],\n  );\n\n  const onDayEnter = React.useCallback(\n    (date: Date) => setHintedDate(getNewValue(date)),\n    [setHintedDate, getNewValue],\n  );\n\n  const onDayLeave = React.useCallback(() => setHintedDate(undefined), [setHintedDate]);\n\n  const isDayHinted = React.useCallback(\n    (day: Date) => getIsDaySelected(day, hintedDate),\n    [hintedDate],\n  );\n\n  const onRightPartViewDateChange = React.useCallback(\n    (newDate: Date) => setViewDate(subMonths(newDate, 1)),\n    [setViewDate],\n  );\n\n  return (\n    <RootComponent {...props} baseClassName={styles['CalendarRange']}>\n      <div className={styles['CalendarRange__inner']}>\n        <CalendarHeader\n          viewDate={viewDate}\n          onChange={setViewDate}\n          nextMonthHidden\n          onPrevMonth={setPrevMonth}\n          disablePickers={disablePickers}\n          className={styles['CalendarRange__header']}\n          prevMonthLabel={prevMonthLabel}\n          nextMonthLabel={nextMonthLabel}\n          changeMonthLabel={changeMonthLabel}\n          changeYearLabel={changeYearLabel}\n          prevMonthIcon={prevMonthIcon}\n          isMonthDisabled={isMonthDisabled}\n          isYearDisabled={isYearDisabled}\n          {...leftPartHeaderTestsData}\n        />\n        <CalendarDays\n          viewDate={viewDate}\n          value={value}\n          weekStartsOn={weekStartsOn}\n          onKeyDown={handleKeyDown}\n          isDayFocused={isDayFocused}\n          onDayChange={onDayChange}\n          isDaySelected={isDaySelected}\n          isDayActive={isDayActive}\n          isDaySelectionEnd={isDaySelectionEnd}\n          isDaySelectionStart={isDaySelectionStart}\n          isDayHinted={isDayHinted}\n          onDayEnter={onDayEnter}\n          onDayLeave={onDayLeave}\n          isHintedDaySelectionEnd={isHintedDaySelectionEnd}\n          isHintedDaySelectionStart={isHintedDaySelectionStart}\n          isDayDisabled={isDayDisabled}\n          listenDayChangesForUpdate={listenDayChangesForUpdate}\n          renderDayContent={renderDayContent}\n          aria-label={changeDayLabel}\n          dayTestId={dayTestId}\n        />\n      </div>\n      <div className={styles['CalendarRange__inner']}>\n        <CalendarHeader\n          viewDate={secondViewDate}\n          onChange={onRightPartViewDateChange}\n          prevMonthHidden\n          onNextMonth={setNextMonth}\n          disablePickers={disablePickers}\n          className={styles['CalendarRange__header']}\n          prevMonthLabel={prevMonthLabel}\n          nextMonthLabel={nextMonthLabel}\n          changeMonthLabel={changeMonthLabel}\n          changeYearLabel={changeYearLabel}\n          nextMonthIcon={nextMonthIcon}\n          isMonthDisabled={isMonthDisabled}\n          isYearDisabled={isYearDisabled}\n          {...rightPartHeaderTestsData}\n        />\n        <CalendarDays\n          viewDate={secondViewDate}\n          value={value}\n          weekStartsOn={weekStartsOn}\n          aria-label={changeDayLabel}\n          onKeyDown={handleKeyDown}\n          isDayFocused={isDayFocused}\n          onDayChange={onDayChange}\n          isDaySelected={isDaySelected}\n          isDayActive={isDayActive}\n          isDaySelectionEnd={isDaySelectionEnd}\n          isDaySelectionStart={isDaySelectionStart}\n          isDayHinted={isDayHinted}\n          onDayEnter={onDayEnter}\n          onDayLeave={onDayLeave}\n          isHintedDaySelectionEnd={isHintedDaySelectionEnd}\n          isHintedDaySelectionStart={isHintedDaySelectionStart}\n          isDayDisabled={isDayDisabled}\n          listenDayChangesForUpdate={listenDayChangesForUpdate}\n          renderDayContent={renderDayContent}\n          tabIndex={0}\n          onBlur={resetSelectedDay}\n          dayTestId={dayTestId}\n        />\n      </div>\n    </RootComponent>\n  );\n};\n"],"names":["CalendarRange","getIsDaySelected","day","value","isWithinInterval","start","startOfDay","end","endOfDay","onChange","disablePast","disableFuture","shouldDisableDate","onClose","weekStartsOn","disablePickers","prevMonthLabel","nextMonthLabel","changeMonthLabel","changeYearLabel","changeDayLabel","prevMonthIcon","nextMonthIcon","listenDayChangesForUpdate","renderDayContent","dayTestId","leftPartHeaderTestsData","rightPartHeaderTestsData","props","viewDate","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","isDayFocused","isDayDisabled","resetSelectedDay","isMonthDisabled","isYearDisabled","useCalendar","hintedDate","setHintedDate","React","useState","secondViewDate","addMonths","handleKeyDown","useCallback","event","includes","key","preventDefault","newFocusedDay","navigateDate","isSameMonth","getNewValue","date","isValueEmpty","isSameDay","setTimeEqual","isBefore","isAfter","onDayChange","undefined","isDaySelected","isDayActive","Boolean","isDaySelectionEnd","dayOfWeek","isLastDay","isHintedDaySelectionEnd","isDaySelectionStart","isFirstDay","isHintedDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","onRightPartViewDateChange","newDate","subMonths","RootComponent","baseClassName","div","className","CalendarHeader","nextMonthHidden","onPrevMonth","CalendarDays","onKeyDown","aria-label","prevMonthHidden","onNextMonth","tabIndex","onBlur"],"mappings":";;;;+BAsEaA;;;eAAAA;;;;;;;;iEAtEU;yBAWhB;6BACqB;0BACsC;8BAM3D;gCAKA;+BACuB;AAkC9B,MAAMC,mBAAmB,CAACC,KAAWC;IACnC,IAAI,EAACA,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,KAAI,CAACA,KAAK,CAAC,EAAE,EAAE;QAC5B,OAAO;IACT;IAEA,OAAOC,IAAAA,yBAAgB,EAACF,KAAK;QAAEG,OAAOC,IAAAA,mBAAU,EAACH,KAAK,CAAC,EAAE;QAAGI,KAAKC,IAAAA,iBAAQ,EAACL,KAAK,CAAC,EAAE;IAAE;AACtF;AAKO,MAAMH,gBAAgB;QAAC,EAC5BG,KAAK,EACLM,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbC,iBAAiB,EACjBC,OAAO,EACPC,eAAe,CAAC,EAChBC,cAAc,EACdC,iBAAiB,kBAAkB,EACnCC,iBAAiB,iBAAiB,EAClCC,mBAAmB,gBAAgB,EACnCC,kBAAkB,cAAc,EAChCC,iBAAiB,eAAe,EAChCC,aAAa,EACbC,aAAa,EACbC,yBAAyB,EACzBC,gBAAgB,EAChBC,SAAS,EACTC,uBAAuB,EACvBC,wBAAwB,EAEL,WADhBC;QApBHzB;QACAM;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAM,EACJE,QAAQ,EACRC,WAAW,EACXC,YAAY,EACZC,YAAY,EACZC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,EACfC,cAAc,EACf,GAAGC,IAAAA,wBAAW,EAAC;QAAErC;QAAOQ;QAAeD;QAAaE;IAAkB;IACvE,MAAM,CAAC6B,YAAYC,cAAc,GAAGC,OAAMC,QAAQ;IAClD,MAAMC,iBAAiBC,IAAAA,kBAAS,EAACjB,UAAU;IAE3C,MAAMkB,gBAAgBJ,OAAMK,WAAW,CACrC,CAACC;QACC,IAAI;YAAC;YAAW;YAAa;YAAa;SAAa,CAACC,QAAQ,CAACD,MAAME,GAAG,GAAG;YAC3EF,MAAMG,cAAc;QACtB;QAEA,MAAMC,gBAAgBC,IAAAA,sBAAY,EAACrB,uBAAAA,wBAAAA,aAAc9B,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,EAAE8C,MAAME,GAAG;QAEtE,IACEE,iBACA,CAACE,IAAAA,oBAAW,EAACF,eAAexB,aAC5B,CAAC0B,IAAAA,oBAAW,EAACF,eAAeP,IAAAA,kBAAS,EAACjB,UAAU,KAChD;YACAC,YAAYuB;QACd;QACAnB,cAAcmB;IAChB,GACA;QAACpB;QAAYC;QAAeJ;QAAa3B;QAAO0B;KAAS;IAG3D,MAAM2B,cAAcb,OAAMK,WAAW,CACnC,CAACS;QACC,MAAMC,eAAe,CAACvD,SAAUA,KAAK,CAAC,EAAE,KAAK,QAAQA,KAAK,CAAC,EAAE,KAAK;QAClE,IAAIuD,cAAc;YAChB,OAAO;gBAACD;gBAAM;aAAK;QACrB;QAEA,MAAM,CAACpD,OAAOE,IAAI,GAAGJ;QACrB,IAAI,AAACE,SAASsD,IAAAA,kBAAS,EAACF,MAAMpD,UAAYE,OAAOoD,IAAAA,kBAAS,EAACF,MAAMlD,MAAO;YACtE,OAAO;gBAACqD,IAAAA,sBAAY,EAACH,MAAMpD;gBAAQuD,IAAAA,sBAAY,EAACH,MAAMlD;aAAK;QAC7D,OAAO,IAAIF,SAASwD,IAAAA,iBAAQ,EAACJ,MAAMpD,QAAQ;YACzC,OAAO;gBAACuD,IAAAA,sBAAY,EAACH,MAAMpD;gBAAQE;aAAI;QACzC,OAAO,IAAIF,SAASyD,IAAAA,gBAAO,EAACL,MAAMpD,QAAQ;YACxC,OAAO;gBAACA;gBAAOuD,IAAAA,sBAAY,EAACH,MAAMlD;aAAK;QACzC;QACA,OAAOJ;IACT,GACA;QAACA;KAAM;IAGT,MAAM4D,cAAcpB,OAAMK,WAAW,CACnC,CAACS;QACChD,qBAAAA,+BAAAA,SAAW+C,YAAYC;QACvBf,cAAcsB;IAChB,GACA;QAACvD;QAAU+C;KAAY;IAGzB,MAAMS,gBAAgBtB,OAAMK,WAAW,CAAC,CAAC9C,MAAcD,iBAAiBC,KAAKC,QAAQ;QAACA;KAAM;IAE5F,MAAM+D,cAAcvB,OAAMK,WAAW,CACnC,CAAC9C,MACCiE,QAAQ,CAAChE,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,KAAIwD,IAAAA,kBAAS,EAACzD,KAAKC,KAAK,CAAC,EAAE,KAAOA,CAAAA,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,KAAIwD,IAAAA,kBAAS,EAACzD,KAAKC,KAAK,CAAC,EAAE,IAC5F;QAACA;KAAM;IAGT,MAAMiE,oBAAoBzB,OAAMK,WAAW,CACzC,CAAC9C,KAAWmE,YACVF,QAAQG,IAAAA,mBAAS,EAACpE,KAAKmE,cAAelE,CAAAA,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,KAAIwD,IAAAA,kBAAS,EAACzD,KAAKC,KAAK,CAAC,EAAE,IAC7E;QAACA;KAAM;IAGT,MAAMoE,0BAA0B5B,OAAMK,WAAW,CAC/C,CAAC9C,KAAWmE,YACVF,QAAQG,IAAAA,mBAAS,EAACpE,KAAKmE,cAAe5B,CAAAA,uBAAAA,iCAAAA,UAAY,CAAC,EAAE,KAAIkB,IAAAA,kBAAS,EAACzD,KAAKuC,UAAU,CAAC,EAAE,IACvF;QAACA;KAAW;IAGd,MAAM+B,sBAAsB7B,OAAMK,WAAW,CAC3C,CAAC9C,KAAWmE,YACVF,QAAQM,IAAAA,oBAAU,EAACvE,KAAKmE,cAAelE,CAAAA,kBAAAA,4BAAAA,KAAO,CAAC,EAAE,KAAIwD,IAAAA,kBAAS,EAACzD,KAAKC,KAAK,CAAC,EAAE,IAC9E;QAACA;KAAM;IAGT,MAAMuE,4BAA4B/B,OAAMK,WAAW,CACjD,CAAC9C,KAAWmE,YACVF,QAAQM,IAAAA,oBAAU,EAACvE,KAAKmE,cAAe5B,CAAAA,uBAAAA,iCAAAA,UAAY,CAAC,EAAE,KAAIkB,IAAAA,kBAAS,EAACzD,KAAKuC,UAAU,CAAC,EAAE,IACxF;QAACA;KAAW;IAGd,MAAMkC,aAAahC,OAAMK,WAAW,CAClC,CAACS,OAAef,cAAcc,YAAYC,QAC1C;QAACf;QAAec;KAAY;IAG9B,MAAMoB,aAAajC,OAAMK,WAAW,CAAC,IAAMN,cAAcsB,YAAY;QAACtB;KAAc;IAEpF,MAAMmC,cAAclC,OAAMK,WAAW,CACnC,CAAC9C,MAAcD,iBAAiBC,KAAKuC,aACrC;QAACA;KAAW;IAGd,MAAMqC,4BAA4BnC,OAAMK,WAAW,CACjD,CAAC+B,UAAkBjD,YAAYkD,IAAAA,kBAAS,EAACD,SAAS,KAClD;QAACjD;KAAY;IAGf,qBACE,sBAACmD,4BAAa,8CAAKrD;QAAOsD,aAAa;;0BACrC,sBAACC;gBAAIC,SAAS;;kCACZ,qBAACC,8BAAc;wBACbxD,UAAUA;wBACVpB,UAAUqB;wBACVwD,eAAe;wBACfC,aAAaxD;wBACbhB,gBAAgBA;wBAChBqE,SAAS;wBACTpE,gBAAgBA;wBAChBC,gBAAgBA;wBAChBC,kBAAkBA;wBAClBC,iBAAiBA;wBACjBE,eAAeA;wBACfiB,iBAAiBA;wBACjBC,gBAAgBA;uBACZb;kCAEN,qBAAC8D,0BAAY;wBACX3D,UAAUA;wBACV1B,OAAOA;wBACPW,cAAcA;wBACd2E,WAAW1C;wBACXZ,cAAcA;wBACd4B,aAAaA;wBACbE,eAAeA;wBACfC,aAAaA;wBACbE,mBAAmBA;wBACnBI,qBAAqBA;wBACrBK,aAAaA;wBACbF,YAAYA;wBACZC,YAAYA;wBACZL,yBAAyBA;wBACzBG,2BAA2BA;wBAC3BtC,eAAeA;wBACfb,2BAA2BA;wBAC3BC,kBAAkBA;wBAClBkE,cAAYtE;wBACZK,WAAWA;;;;0BAGf,sBAAC0D;gBAAIC,SAAS;;kCACZ,qBAACC,8BAAc;wBACbxD,UAAUgB;wBACVpC,UAAUqE;wBACVa,eAAe;wBACfC,aAAa5D;wBACbjB,gBAAgBA;wBAChBqE,SAAS;wBACTpE,gBAAgBA;wBAChBC,gBAAgBA;wBAChBC,kBAAkBA;wBAClBC,iBAAiBA;wBACjBG,eAAeA;wBACfgB,iBAAiBA;wBACjBC,gBAAgBA;uBACZZ;kCAEN,qBAAC6D,0BAAY;wBACX3D,UAAUgB;wBACV1C,OAAOA;wBACPW,cAAcA;wBACd4E,cAAYtE;wBACZqE,WAAW1C;wBACXZ,cAAcA;wBACd4B,aAAaA;wBACbE,eAAeA;wBACfC,aAAaA;wBACbE,mBAAmBA;wBACnBI,qBAAqBA;wBACrBK,aAAaA;wBACbF,YAAYA;wBACZC,YAAYA;wBACZL,yBAAyBA;wBACzBG,2BAA2BA;wBAC3BtC,eAAeA;wBACfb,2BAA2BA;wBAC3BC,kBAAkBA;wBAClBqE,UAAU;wBACVC,QAAQzD;wBACRZ,WAAWA;;;;;;AAKrB"}