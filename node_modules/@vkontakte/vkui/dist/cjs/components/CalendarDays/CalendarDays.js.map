{"version":3,"sources":["../../../../src/components/CalendarDays/CalendarDays.tsx"],"sourcesContent":["import * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useTodayDate } from '../../hooks/useTodayDate';\nimport { getDaysNames, getWeeks } from '../../lib/calendar';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  CalendarDay,\n  type CalendarDayElementProps,\n  type CalendarDayProps,\n  type CalendarDayTestsProps,\n} from '../CalendarDay/CalendarDay';\nimport { useConfigProvider } from '../ConfigProvider/ConfigProviderContext';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport styles from './CalendarDays.module.css';\n\nexport type CalendarDaysTestsProps = {\n  dayTestId?: CalendarDayTestsProps['testId'];\n};\n\nexport interface CalendarDaysProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange'>,\n    Pick<CalendarDayProps, 'renderDayContent'>,\n    CalendarDaysTestsProps {\n  value?: Date | Array<Date | null>;\n  viewDate: Date;\n  weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  showNeighboringMonth?: boolean;\n  size?: 's' | 'm';\n  dayProps?: CalendarDayElementProps;\n  listenDayChangesForUpdate?: boolean;\n  onDayChange: (value: Date) => void;\n  isDayDisabled: (value: Date) => boolean;\n  isDaySelectionStart: (value: Date, dayOfWeek: number) => boolean;\n  isDaySelectionEnd: (value: Date, dayOfWeek: number) => boolean;\n  isHintedDaySelectionStart?: (value: Date, dayOfWeek: number) => boolean;\n  isHintedDaySelectionEnd?: (value: Date, dayOfWeek: number) => boolean;\n  isDayActive: (value: Date) => boolean;\n  isDayHinted?: (value: Date) => boolean;\n  isDaySelected?: (value: Date) => boolean;\n  isDayFocused: (value: Date) => boolean;\n  onDayEnter?: (value: Date) => void;\n  onDayLeave?: (value: Date) => void;\n}\n\nexport const CalendarDays = ({\n  viewDate,\n  value,\n  weekStartsOn,\n  onDayChange,\n  isDaySelected,\n  isDayActive,\n  isDaySelectionEnd,\n  isDaySelectionStart,\n  onDayEnter,\n  onDayLeave,\n  isDayHinted,\n  isHintedDaySelectionStart,\n  isHintedDaySelectionEnd,\n  isDayFocused,\n  isDayDisabled,\n  size,\n  showNeighboringMonth = false,\n  dayProps,\n  listenDayChangesForUpdate = false,\n  getRootRef,\n  renderDayContent,\n  dayTestId,\n  ...props\n}: CalendarDaysProps): React.ReactNode => {\n  const { locale } = useConfigProvider();\n  const ref = useExternRef(getRootRef);\n  const now = useTodayDate(listenDayChangesForUpdate);\n\n  const weeks = React.useMemo(() => getWeeks(viewDate, weekStartsOn), [weekStartsOn, viewDate]);\n\n  const daysNames = React.useMemo(\n    () => getDaysNames(now, weekStartsOn, locale),\n    [locale, now, weekStartsOn],\n  );\n\n  const handleDayChange = React.useCallback(\n    (date: Date) => {\n      onDayChange(date);\n\n      ref.current?.focus();\n    },\n    [onDayChange, ref],\n  );\n\n  return (\n    <RootComponent {...props} baseClassName={styles['CalendarDays']} getRootRef={ref}>\n      <div\n        className={classNames(\n          styles['CalendarDays__row'],\n          size === 's' && styles['CalendarDays__row--size-s'],\n        )}\n      >\n        {daysNames.map((dayName) => (\n          <Footnote key={dayName} className={styles['CalendarDays__weekday']}>\n            {dayName}\n          </Footnote>\n        ))}\n      </div>\n\n      {weeks.map((week, i) => (\n        <div\n          className={classNames(\n            styles['CalendarDays__row'],\n            size === 's' && styles['CalendarDays__row--size-s'],\n          )}\n          key={i}\n        >\n          {week.map((day, i) => {\n            const sameMonth = isSameMonth(day, viewDate);\n            return (\n              <CalendarDay\n                key={day.toISOString()}\n                day={day}\n                today={isSameDay(day, now)}\n                active={isDayActive(day)}\n                onChange={handleDayChange}\n                hidden={!showNeighboringMonth && !sameMonth}\n                disabled={isDayDisabled(day)}\n                selectionStart={isDaySelectionStart(day, i)}\n                selectionEnd={isDaySelectionEnd(day, i)}\n                hintedSelectionStart={isHintedDaySelectionStart?.(day, i)}\n                hintedSelectionEnd={isHintedDaySelectionEnd?.(day, i)}\n                selected={isDaySelected?.(day)}\n                focused={isDayFocused(day)}\n                onEnter={onDayEnter}\n                onLeave={onDayLeave}\n                hinted={isDayHinted?.(day)}\n                sameMonth={sameMonth}\n                size={size}\n                renderDayContent={renderDayContent}\n                testId={dayTestId}\n                {...dayProps}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </RootComponent>\n  );\n};\n"],"names":["CalendarDays","viewDate","value","weekStartsOn","onDayChange","isDaySelected","isDayActive","isDaySelectionEnd","isDaySelectionStart","onDayEnter","onDayLeave","isDayHinted","isHintedDaySelectionStart","isHintedDaySelectionEnd","isDayFocused","isDayDisabled","size","showNeighboringMonth","dayProps","listenDayChangesForUpdate","getRootRef","renderDayContent","dayTestId","props","locale","useConfigProvider","ref","useExternRef","now","useTodayDate","weeks","React","useMemo","getWeeks","daysNames","getDaysNames","handleDayChange","useCallback","date","current","focus","RootComponent","baseClassName","div","className","classNames","map","dayName","Footnote","week","i","day","sameMonth","isSameMonth","CalendarDay","today","isSameDay","active","onChange","hidden","disabled","selectionStart","selectionEnd","hintedSelectionStart","hintedSelectionEnd","selected","focused","onEnter","onLeave","hinted","testId","toISOString"],"mappings":";;;;+BA+CaA;;;eAAAA;;;;;;;;iEA/CU;sBACI;yBACY;8BACV;8BACA;0BACU;6BAOhC;uCAC2B;+BACJ;0BACL;AAgClB,MAAMA,eAAe;QAAC,EAC3BC,QAAQ,EACRC,KAAK,EACLC,YAAY,EACZC,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,iBAAiB,EACjBC,mBAAmB,EACnBC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,yBAAyB,EACzBC,uBAAuB,EACvBC,YAAY,EACZC,aAAa,EACbC,IAAI,EACJC,uBAAuB,KAAK,EAC5BC,QAAQ,EACRC,4BAA4B,KAAK,EACjCC,UAAU,EACVC,gBAAgB,EAChBC,SAAS,EAES,WADfC;QAtBHtB;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;;IAGA,MAAM,EAAEE,MAAM,EAAE,GAAGC,IAAAA,wCAAiB;IACpC,MAAMC,MAAMC,IAAAA,0BAAY,EAACP;IACzB,MAAMQ,MAAMC,IAAAA,0BAAY,EAACV;IAEzB,MAAMW,QAAQC,OAAMC,OAAO,CAAC,IAAMC,IAAAA,kBAAQ,EAAChC,UAAUE,eAAe;QAACA;QAAcF;KAAS;IAE5F,MAAMiC,YAAYH,OAAMC,OAAO,CAC7B,IAAMG,IAAAA,sBAAY,EAACP,KAAKzB,cAAcqB,SACtC;QAACA;QAAQI;QAAKzB;KAAa;IAG7B,MAAMiC,kBAAkBL,OAAMM,WAAW,CACvC,CAACC;YAGCZ;QAFAtB,YAAYkC;SAEZZ,eAAAA,IAAIa,OAAO,cAAXb,mCAAAA,aAAac,KAAK;IACpB,GACA;QAACpC;QAAasB;KAAI;IAGpB,qBACE,sBAACe,4BAAa,8CAAKlB;QAAOmB,aAAa;QAA0BtB,YAAYM;;0BAC3E,qBAACiB;gBACCC,WAAWC,IAAAA,gBAAU,2BAEnB7B,SAAS;0BAGVkB,UAAUY,GAAG,CAAC,CAACC,wBACd,qBAACC,kBAAQ;wBAAeJ,SAAS;kCAC9BG;uBADYA;;YAMlBjB,MAAMgB,GAAG,CAAC,CAACG,MAAMC,kBAChB,qBAACP;oBACCC,WAAWC,IAAAA,gBAAU,2BAEnB7B,SAAS;8BAIViC,KAAKH,GAAG,CAAC,CAACK,KAAKD;wBACd,MAAME,YAAYC,IAAAA,oBAAW,EAACF,KAAKlD;wBACnC,qBACE,qBAACqD,wBAAW;4BAEVH,KAAKA;4BACLI,OAAOC,IAAAA,kBAAS,EAACL,KAAKvB;4BACtB6B,QAAQnD,YAAY6C;4BACpBO,UAAUtB;4BACVuB,QAAQ,CAAC1C,wBAAwB,CAACmC;4BAClCQ,UAAU7C,cAAcoC;4BACxBU,gBAAgBrD,oBAAoB2C,KAAKD;4BACzCY,cAAcvD,kBAAkB4C,KAAKD;4BACrCa,oBAAoB,EAAEnD,sCAAAA,gDAAAA,0BAA4BuC,KAAKD;4BACvDc,kBAAkB,EAAEnD,oCAAAA,8CAAAA,wBAA0BsC,KAAKD;4BACnDe,QAAQ,EAAE5D,0BAAAA,oCAAAA,cAAgB8C;4BAC1Be,SAASpD,aAAaqC;4BACtBgB,SAAS1D;4BACT2D,SAAS1D;4BACT2D,MAAM,EAAE1D,wBAAAA,kCAAAA,YAAcwC;4BACtBC,WAAWA;4BACXpC,MAAMA;4BACNK,kBAAkBA;4BAClBiD,QAAQhD;2BACJJ,WApBCiC,IAAIoB,WAAW;oBAuB1B;mBA7BKrB;;;AAkCf"}